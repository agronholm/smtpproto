[build-system]
requires = [
    "setuptools >= 64",
    "setuptools_scm >= 6.4"
]
build-backend = "setuptools.build_meta"

[project]
name = "smtpproto"
description = "Sans-io SMTP client with an AnyIO based async I/O implementation"
readme = "README.rst"
authors = [{name = "Alex GrÃ¶nholm", email = "alex.gronholm@nextday.fi"}]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Framework :: AnyIO",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
requires-python = ">= 3.7"
dependencies = [ "anyio >= 3.0" ]
dynamic = [ "version" ]

[project.urls]
Documentation = "https://smtpproto.readthedocs.io/en/latest/"
"Source code" = "https://github.com/agronholm/smtpproto"
"Issue tracker" = "https://github.com/agronholm/smtpproto/issues"

[project.optional-dependencies]
test = [
    "anyio[trio] >= 3.0",
    "aiosmtpd >= 1.4.4",
    "coverage >= 7",
    "pytest >= 6.0",
    "trustme",
]
doc = [
    "packaging",
    "sphinx_rtd_theme >= 1.3.0",
    "sphinx-autodoc-typehints >= 1.2.0",
]

[tool.setuptools_scm]
version_scheme = "post-release"
local_scheme = "dirty-tag"

[tool.ruff]
select = [
    "E", "F", "W",  # default flake-8
    "I",            # isort
    "PGH",          # pygrep-hooks
    "UP",           # pyupgrade
    "B0",           # flake8-bugbear
]

[tool.pytest.ini_options]
addopts = "-rsx --tb=short"
testpaths = "tests"
filterwarnings = "always"

[tool.coverage.run]
source = ["smtpproto"]

[tool.coverage.report]
show_missing = true

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = lint, py37, py38, py39, py310, py311, py312, pypy3
skip_missing_interpreters = true
minversion = 4.0

[testenv]
depends = lint
commands = pytest {posargs}
extras = test

[testenv:lint]
depends =
deps = pre-commit
commands = pre-commit run --all-files --show-diff-on-failure
skip_install = true

[testenv:docs]
extras = doc
commands = sphinx-build -W -n docs build/sphinx
"""
